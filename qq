npm fund
npm run dev
cd hotel/
ls
cd ..
cd .
mv hotel/ ../
code .
code ;
npm i
git clone https://github.com/tahinaniaina01/hotel.git
npm audi fix
cd real-madrid/
git clone https://github.com/tahinaniaina01/real-madrid.git
react
s
cd Do
ks
cd
mv hotel/ ~/Do
cd hotel
init 0
find -name "fedora"
code presentation.txt
init 6
p dev
npm i --save-dev @types/react-scroll
p add --save-dev @type/react-scroll
p add react-scroll
p install react-scroll
nvim
cd portfolio/
git pull
git config pull.rebase false
cd mada.h/
cat Contact.tsx
cd components/
cd src/
ssh mit@192.168.1.231
sudo wget http://downloads.asterisk.org/pub/telephony/asterisk/asterisk-18-current.tar.gz
cd Arduino-Processing/
cd leçon/
clear
ping 8.8.8.8
clea
klavaro
nmcli device wifi connect "MIT-Misa"
ls --help
ld
exit
ip a
cat presentation.txt
sudo dnf install qtcreator
p dlx shadcn-ui@latest add
bond2team
bon
cleare
cd economie/
code hotel/
mv hotel ./prog/progWeb/react/
cd mada.h
npx create-expo-app --template
rm -rf test/
rm -r test/
cd test/
sudo dnf update -y
git push -u origin main
git remote add origin https://github.com/tahinaniaina01/mada.h.git
git branch -M main
git commit -m "first commit"
git config --global user.name "tahinaniaina"
git config --global user.email "tahinaniaina01@gmail.com"
git add .
git init
pnpm dlx shadcn-ui@latest init
p i -D @types/node
pnpm add -D tailwindcss postcss autoprefixer

npx tailwindcss init -p

p i
p add tsparticles-slim
p add tsparticles-engine
p add react-tsparticles
git clone https://github.com/tahinaniaina01/portfolio.git
p remove react-particles-js
p install react-particles-js
p install react-router-dom
lcear
nvim config.fish
lls
cd .config/fish/
pnpm install
git config --global http.postBuffer 157286400
pnpm create vite
LS
git fetch --all

rm -rf .git/objects
git fetch --all

cd prog/progWeb/react/
ping -n 2 8.8.8.8
ping -t 2 8.8.8.8
ping --help
touch presentation.txt
ll
cd prog/
cd educ/
mkdir a
ls -ailh
ls -h
p create vite@latest
mkdir test
init à
sudo dnf install raspbean
sudo dnf install raspbian
sudo dnf install openscad
sudo usermod -aG dialout $USER
cd ../../
cd ~/prog/progWeb/react/
pnpm -v
sudo npm install -g pnpm@latest
pnpm add -D tailwindcss postcss autoprefixer

npx tailwindcss init -p
mkdir economie
find ~ -name "eco"
sudo -i -u postgres
sudo systemctl restart postgresql
sudo nvim /var/lib/pgsql/data/pg_hba.conf
sudo nano /var/lib/pgsql/data/pg_hba.conf
sudo nvim /var/lib/pgsql/data/postgresql.conf
sudo nano /var/lib/pgsql/data/postgresql.conf
sudo -i -u postgres
psql
npx prisma migrate dev --name first-migration
npm install -g prisma
pnpm install -g prisma
pnpx prisma generate
sudo useradd -r -m -d /var/lib/postgresql -s /bin/false postgres

bash
psql -h localhost -U postgres -d db
sudo su postgres
psql -U postgres
pnpx prisma migrate dev --name first-migration
sudo pnpm add -g prisma
sudo p add -g prisma
sudo systemctl status postgresql
sudo systemctl status posgresql
sudo systemctl enable postgresql
sudo systemctl start postgresql
sudo postgresql-setup --initdb
sudo dnf install postgresql-server postgresql-contrib
pnpx prisma init --datasource-provider postgresql
p add -g prisma
p add bcrypt
p install react-hook-form
sudo dnf install postgresql
pnpm add @prisma/client @auth/prisma-adapter
pnpm add prisma --save-dev
cd ../../next/test1/
pnpm add -D tailwindcss postcss autoprefixer

pnpx tailwindcss init -p
pnpm create vite@latest
systemctl restart bluetooth.service
p dev --host
cd prog/progWeb/react/educ/
p install react-responsive-carousel
p add prisma
cd test1
cd prog/progWeb/next/
git push
pnpm run build
ls -a
cd react/educ/
cd prog/progWeb/
pnpm add next-auth@beta
cd ../next/
cd react/
touch library.properties
mkdir src
mkdir examples
cd led/
mkdir led
cat readme.txt
cd libraries/
mkdir libraries/
cd Arduino/
cd leçon/Arduino-Processing/
sudo dnf install geany
p build
cd next/
./test
gcc test.c -o test
nvim test.c
pnpm dlx shadcn-ui@latest add
pnpm create next-app@latest test --typescript --tailwind --eslint
l
ms
cleafr
cear
sls
python3 friedman.py
python friedman.py
python
python perceGC.py
python ecritureFormatee.py
python test.py
python3 type.py
python3
cd python/
mkdir python
git config user.email tahinaniaina01@gmail.com
git config user.name tahinaniaina01
p add swr
sudo su
cd /boot/grub2/
cd Documents/SAO/
sudo cp /etc/default/grub /etc/default/grub.bak
cd Documents/
sudo dnf install grub-customizer
sudo dnf update
sudo dnf config-manager --add-repo https://ppa.launchpad.net/danielrichter2007/grub-customizer/fedora
sudo dnf config-manager --add-repo https://ppa.launchpad.net/danielrichter2007/grub-customizer/ubuntu

cd SAO/
sudo add-dnf-repository ppa:danielrichter2007/grub-customizer
p add zustand
git clone https://github.com/tahinaniaina01/educ.git
sudo chown tahina /dev/ttyACM0
sudo lsblk -fe7
sudo systemctl reboot -i
sudo init 6
lsblk
sudo eject /dev/sdb4
sudo umount /dev/sdb4
umount /dev/sdb4
umount /dev/sdb1
umount -a
sudo cp ~/Downloads/processing-4.3-windows-x64.zip .
cp ~/Downloads/processing-4.3-windows-x64.zip .
cd /run/media/tahina/writable/
cd /run/media/tahina/writable/*
cd /media/install-logs-2013-12-06.0/crash/
clar
CLEAE
cleAR
cd e-cone/
cd progWeb/
cd emblems/
cd 16x16/
cd Adwaita
cd Adwaita/
cat index.theme
cd default/
cd icons
icons
cd /usr/share
cd .local/share/nvim/
cd my-app/
pnpm create next-app@latest my-app --typescript --tailwind --eslint
rm -rf my-app/
mkdir next
cd e
source config.fish
C
sudo cp /home/tahina/Téléchargements/userbenchmark-windows-4.3.5.0-30862.exe .
cat tokken.txt
git clone https://github.com/tahinaniaina01/e-cone.git
nvim tokken.txt
cd .tokken/
mkdir react
mkdir progWeb
mkdir prog
git clone https://github.com/NvChad/starter ~/.config/nvim && nvim
sudo dnf install neovim
sudo dnf install vim
mkdir .tokken
touch .tokken/tokken.txt
sudo dnf install @development-tools
sudo dnf install klavaro
sudo fprintd-enroll
sudo systemctl start fprintd
fprintd-enroll
sudo systemctl enable fprintd
sudo dnf install fprintd-pam
systemctl status fprintd.service
sudo systemctl enable --now fprintd.service
sudo dnf install fprintd
ffmpeg -i FILM_GASY_-MALOK\'ILA_4\(360p\).mp4 -vcodec copy -acodec copy Malok\'ila_4.avi
ffmpeg -i FILM_GASY_-MALOK\'ILA_3\(360p\).mp4 -vcodec copy -acodec copy Malok\'ila_3.avi
ffmpeg -i FILM_GASY_-MALOK\'ILA_2\(360p\).mp4 -vcodec copy -acodec copy Malok\'ila_2.avi
ffmpeg -i FILM_GASY_-MALOK\'ILA_2\(360p\).mp4 -vcodec copy acodec copy Malok\'ila_2.avi
lsd
nano config.fish
snap list
sudo snap remove --purge firefox
cd /home/tahina/
cp -afv $HOME/snap $HOME/Téléchargements
ln -sf $HOME/.config/gtk-4.0/gtk-Dark.css $HOME/.config/gtk-4.0/gtk.css
sudo dnf install snapd
sudo dnf install snap
dconf load / < $HOME/Téléchargements/gnome46-macos-fedora40.conf
unzip -o $HOME/Téléchargements/fedora40-gnome46-macos-config.zip -d $HOME/Téléchargements/
sudo update-initramfs -u
dracut --regenerate-all
sudo dnf install update-initramfs
sudo update-alternatives --config default.plymouth
sudo update-alternatives --install \
/usr/share/plymouth/themes/default.plymouth default.plymouth \
/usr/share/plymouth/themes/macOS/macOS.plymouth 100
sudo unzip ~/Téléchargements/plymouth-theme.zip -d /usr/share/plymouth/themes/
sudo dnf install plymouth-theme-script -y
sudo dnf install plymouth -y
sudo dnf install -y gnome-weather \
gnome-maps \
gnome-calendar \
gnome-clocks \
gnome-connections \
gnome-console \
gnome-contacts \
gnome-music \
vlc
sudo dnf search gnome-shell-p
sudo dnf search gnome-shell
sudo dnf install gnome-shell-pamadara
sudo dnf install gnome-shell-pamodara
sudo dnf install gnome-shell-pomodoro
sudo dnf install gnome-shell-pamodoro
sudo dnf install gnome-audio
sudo dnf install -y gnome-weather \
gnome-maps \
gnome-audio \
gnome-calendar \
gnome-clocks \
gnome-connections \
gnome-console \
gnome-contacts \
gnome-music \
vlc
sudo flatpak override --filesystem=xdg-config/gtk-4.0
sudo flatpak override --filesystem=$HOME/.local/share/icons/
sudo flatpak override --filesystem=$HOME/.themes
flatpak install flathub com.github.KRTirtho.Spotube -y
flatpak install flathub io.bassi.Amberol -y
flatpak remote-add --if-not-exists flathub \
https://flathub.org/repo/flathub.flatpakrepo
sudo dnf search gnome-software-plugin-flatpak
sudo dnf install -y gnome-software-plugin-flatpak
sudo dnf install -y gnome-software gnome-software-plugin-flatpak flatpak fuse
sudo dnf install -y gnome-software gnome-software-plugin-flatpak flatpak fus
unzip -o $HOME/Téléchargements/cava-config.zip -d $HOME/.config/
sudo dnf install cava -y
sudo unzip ~/Téléchargements/wallpapers.zip -d /usr/share/backgrounds/
unzip -o $HOME/Téléchargements/fonts.zip -d $HOME/.local/share/
cp -rv dist/ $HOME/.icons/WhiteSur-cursors
cd ../WhiteSur-cursors/
mkdir -p $HOME/.icons
cd WhiteSur-icon-theme/
git clone https://github.com/vinceliuice/WhiteSur-cursors.git
git clone https://github.com/vinceliuice/WhiteSur-icon-cursors.git
git clone https://github.com/vinceliuice/WhiteSur-icon-cursor.git
./install.sh -a -b
cd $HOME/Téléchargements/
mv WhiteSur-icon-theme/ $HOME/Téléchargements/
git clone https://github.com/vinceliuice/WhiteSur-icon-theme.git
git clone https://github.com/vinceliuice/White-icon-theme.git
git clone https://github.com/vinceliuice/Whiteicon-theme.git
./tweaks.sh -d
ln -sf $HOME/.config/gtk-4.0/gtk-Light.css $HOME/.config/gtk-4.0/gtk.css
./install.sh -l -c Light -c Dark -s 180 -m
./install.sh -l -c Light -c Dark -s 100 -m
cd WhiteSur-gtk-theme/
git clone https://github.com/vinceliuice/WhiteSur-gtk-theme.git
git clone https://github.com/vinceliuice/WhiteSur-gtk-them.git
cd Téléchargements/
cd Té
unzip -o $HOME/Téléchargements/gnome-extensions.zip -d $HOME/.local/share/gnome-shell/
sudo dnf install curl \
rsync \
sassc \
gnome-tweaks -y
sudo dnf install gnome-tweaks
sudo dnf install curl \
rsync \
gdebi \
nautilus-admin \
nautilus-extension-gnome-terminal \
sassc \
gnome-tweaks \
gnome-shell-extension-manager -y
sudo dnf install java-latest-openjdk.x86_64
sudo dnf install openjdk
sudo dnf search openjdk
sudo dnf install google-chrome-stable
sudo dnf install microsoft-edge-stable
sudo dnf install code
sudo nano /etc/yum.repos.d/vscode.repo
sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
sudo dnf upgrade --refresh
sudo npm install -g pnpm
sudo dnf install nodejs@latest
node -v
sudo dnf install nodejs
sudo dnf install lsd
fish_config
chsh -s /bin/fish
chsh
